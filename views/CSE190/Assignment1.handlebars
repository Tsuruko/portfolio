<!doctype html>

<html>
	<head>
		<meta charset="utf-8">
		<meta name-"viewport" contenct-"width=device-width, initial-scale=1.0">
		<title>Monica Liu - Projects</title>
		<!-- bootstrap css files -->
		<link href="/css/bootstrap.min.css" rel="stylesheet">
		<link href="/css/bootstrap-theme.min.css" rel="stylesheet">
		<!-- custom css files -->
		<link href="/css/portfolio.css" rel="stylesheet">
	</head>


	<body>
		{{> navbar}}

		<div id="myModalImg" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-content modal-body">
				<img id="imgPopup" src="" class="img-responsive">
			</div>
		</div>

		<div class="container">
			<div class="page-header">
				<h1>CSE 190: Advanced Computer Graphics</h1> 
			</div>

			<div>
				<ol class="breadcrumb">
					<li><a data-id="1" href="/project/CSE190">Project Home</a></li>
					<li class="active">Assignment 1</li>
					<li><a data-id="2" href="/project/CSE190/Assignment2">Assignment 2</a></li>
					<li><a data-id="3" href="/project/CSE190/Assignment3">Assignment 3</a></li>
				</ol>
			</div>

			<div>
				<h2>Assignment 1 - Image and Signal Processing</h2>
				<p>Date: Spring 2015</p>
				<p>This assignment is the creation of a basic image proccessing program.  It is like a mini photoshop or photo editor</p>
				<p>Please note that all images on this website are converted to .png from the .bmp output of the program and thus may have small differences from the program output.</p>
			</div>

			<div>
				<h2>Links and Demos</h2>
				<a href="http://cseweb.ucsd.edu/~ravir/190/2015/190.html"><p>Class Website</p></a>
				<a href="/app_demos/CSE190/assignment1_mac.zip" download><p>mac: assignment1_mac.zip coming soon</p></a>
				<a href="/app_demos/CSE190/assignment1_code.zip" download><p>Source Code: assignment1_code.zip coming soon</p></a>
			</div>

			<div id="basicOps">
				<h3>Basic Operations</h3>
				<div id="Brighten">
					<h4>Image::Brighten</h4>
					<p>command line example: </br>
						./image -brightness 1.0 < images/shed.bmp > out.bmp
					</p>
					<p>Brightness is controlled by scaling the pixels by the inputed factor.  An error message is printed if x is less than 0.</p>
					<div class="row">		
						<div class="col-sm-1"></div>	
						{{#each brightness}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>
				<div id="ChangeContrast">
					<h4>Image::ChangeContrast</h4>
					<p>Contrast is controlled by interpolating the pixels between a grey image of the average image luminance and the original image.  Negative values inverts the image.</p>
					<p>command line example: </br>
						./image -contrast 1.0 < images/mandrill.bmp > out.bmp
					</p>

					<div class="row">
						<div class="col-sm-1"></div>
						{{#each contrast}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>
				<div id="ChangeSaturation">
					<h4>Image::ChangeSaturation</h4>
					<p>command line example: </br>
						./image -saturation 1.0 < images/wave.bmp > out.bmp
					</p>
					<p>Saturation is controlled by interpolating the pixels between a grey-scale version of the original image and the original image.  Negative values inverts the image hue but keeps the luminance.</p>
					<div class="row">
						<div class="col-sm-1"></div>
						{{#each saturation}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="ChangeGamma">
					<h4>Image::ChangeGamma</h4>
					<p>command line example: </br>
						./image -gamma 1 < images/flower.bmp > 1.bmp
					</p>
					<p>Gamma correction adjusts the color of each pixel of the image by the factor.  Values greater than 1 brighten the image and values less than 1 darken it.  An error message is printed if x is less than 0.</p>
					<div class="row">
						<div class="col-sm-1"></div>
						{{#each gamma}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Crop">
					<h4>Image::Crop</h4>
					<p>command line example: </br>
						./image -crop 275 25 120 80 < images/mandrill.bmp > out.bmp
					</p>
					<p>Cropping is done by selecting a rectangular section of the image at the given starting point up to the size specified.  An error message is printed if x is not between 0 and the image width or if y is not between 0 and the image height</p>
					<div class="row">
						<div class="col-sm-1"></div>
						{{#each crop}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div> 
			</div> <!-- end basic operations -->

			<div id="Quant_Dith">

				<h3>Quantization and Dithering</h3>
				<div id="Quantize">
					<h4>Image::Quantize</h4>
					<p>command line example: </br>
						./image -quantize 8 < images/shed.bmp > out.bmp
					</p>
					<p>An error message is printed if the number of bits is not between 1 and 8</p>
					<div class="row">		
						<div class="col-sm-1"></div>	
						{{#each quantize}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="RandomDither">
					<h4>Image::RandomDither</h4>
					<p>command line example: </br>
						./image -randomDither 8 < images/flower.bmp > out.bmp
					</p>
					<p>An error message is printed if the number of bits is not between 1 and 8</p>
					<div class="row">		
						<div class="col-sm-1"></div>	
						{{#each randomDither}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="FloydSteinbergDither">
					<h4>Image::FloydSteinbergDither</h4>
					<p>command line example: </br>
						./image -FloydSteinbergDither 8 < images/shed.bmp > out.bmp
					</p>
					<p>An error message is printed if the number of bits is not between 1 and 8</p>
					<div class="row">		
						<div class="col-sm-1"></div>	
						{{#each FloydSteinbergDither}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

			</div> <!-- end Quantization and Dithering -->

			<div id="edges">
				<h3>Dealing with edges</h3>
				<p>For all functions needing special cases for the edges, I initally used image wrapping.  I achieved this by using a helper function to calculate a modified index if necessary.</p>
				<p>The helper function <strong>int wrapImg (int max, int x)</strong> takes the maximum value an index can be and the current index, and returns a modified index if the current index is less than 0 or greater than or equal to the max.  As you can see with the wave image this may not be ideal, since the top of the image is very light and the bottom of the image is very dark. </p>
				<p>To deal with this, I decided to use the reflection method instead.  The helper function <strong>int reflectImg (int max, int x)</strong>, which reflects out of bounds points back into the image.</p>
				<div class="row">
					<div class="col-sm-4"></div>
					{{#each Edges}}
						{{> assignmentImg }}
					{{/each}}
				</div>
			</div>

			<div id="Convolution">
				<h3>Basic Convolution and Edge Detection</h3>

				<div id="Blur">
					<h4>Image::Blur</h4>
					<p>command line example: </br>
						./image -blur 11 < images/wave.bmp > out.bmp
					</p>
					<p>An error message is printed if the width of the filter is not odd.</p>
					<p>I used the gaussian filter with sigma = floor(n/2.0)/2.0 for blurring.</p>

					<div class="row">
						<div class="col-sm-1"></div>
						{{#each Blur}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Sharpen">
					<h4>Image::Sharpen</h4>
					<p>command line example: </br>
						./image -sharpen < images/flower.bmp > out.bmp
					</p>
					<p>I used the filter provided in the assignment writeup.</p>

					<div class="row">
						<div class="col-sm-1"></div>
						{{#each Sharpen}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="EdgeDetect">
					<h4>Image::EdgeDetect</h4>
					<p>command line example: </br>
					</p>
					<p>Edge detection using sobel filters</p>
					<div class="row">
						<div class="col-sm-1"></div>
						{{#each EdgeDetect}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

			</div> <!-- end Convolution and Edge Detection -->

			<div id="scaleShift">
				<h3>Antialiased Scale and Shift</h3>

				<div id="Scale">
					<h4>Image::Scale</h4>
					<p>command line example: </br>
					</p>

					<div class="row">
						<div class="col-sm-1"></div>
						{{#each Scale}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Shift">
					<h4>Image::Shift</h4>
					<p>command line example: </br>
					</p>

					<div class="row">
						<div class="col-sm-1"></div>
						{{#each Shift}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>				

			</div>  <!-- end Antialiased Scale and Shift -->

			<div>
				<h3>Fun nonlinear filters</h3>
			</div>

			<div>
				<h3>Extra credit: Compositing and Morphing</h3>
			</div>

			<div>
				<p><a href="#">Back to top of page</a> 
			</div>
		</div>

	</body>

	<!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
	<script src="https://code.jquery.com/jquery.js"></script>
	<script src="/js/bootstrap.min.js"></script>
	<!--custom js files -->
	<script src="/js/portfolio.js"></script>
</html>