<!DOCTYPE html>

<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">

		<title>Monica Liu CSE190</title>

		<!-- social media icons -->
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

		<!-- Latest compiled and minified CSS Bootstrap -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

		<!-- Custom CSS -->
		<link rel="stylesheet" href="/css/portfolio.css">
		<link rel="stylesheet" href="/css/sidebar.css">
	</head>

	<body>
		<!-- Navigation Bar Holder -->
		{{#with CSE190_1_desc}}
			{{> navbar}}
		{{/with}}
		<!-- End Navigation Bar Holder -->

		<!-- Page Content Holder -->
		<div id="contentCSE190" class="pageContent">

		<!--popup image-->
		<div id="myModalImg" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-content modal-body">
				<img id="imgPopup" src="" class="img-responsive">
			</div>
		</div>

		<div class="container">
			<div id="topofpage" class="page-header">
				<h1>CSE190: Advanced Computer Graphics</h1> 
				<h2>Assignment 1 Report: Image and Signal Processing</h2>
			</div>

			<div>
				<p>Date: Spring 2015</p>
				<p>This assignment is the creation of a basic image proccessing program.  It is like a mini photoshop or photo editor</p>
				<p>Please note that all images on this website are converted to .jpg from the .bmp output of the program.</p>
			</div>

			<div id="basicOps" class="line"></div>
				<h3>Basic Operations</h3>
				<div id="Brighten">
					{{#with CSE190_1_desc.Brighten}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">		
						{{#each CSE190_1_img.brightness}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>
				<div id="ChangeContrast">
					{{#with CSE190_1_desc.ChangeContrast}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.contrast}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="ChangeSaturation">
					{{#with CSE190_1_desc.ChangeSaturation}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.saturation}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="ChangeGamma">
					{{#with CSE190_1_desc.ChangeGamma}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.gamma}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Crop">
					{{#with CSE190_1_desc.Crop}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.crop}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div> 
			<!-- end basic operations -->

			<div id="Quant_Dith" class="line"></div>

				<h3>Quantization and Dithering</h3>
				<p>For all of the Quantization and Dithering methods the number of bits must be between 1 and 8.</p>
				<div id="Quantize">
					{{#with CSE190_1_desc.Quantize}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">		
						{{#each CSE190_1_img.quantize}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="RandomDither">
					{{#with CSE190_1_desc.RandomDither}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">		
						{{#each CSE190_1_img.randomDither}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="FloydSteinbergDither">
					{{#with CSE190_1_desc.FloydSteinbergDither}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">		
						{{#each CSE190_1_img.FloydSteinbergDither}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

			<!-- end Quantization and Dithering -->

			<div id="Conv_Edge" class="line"></div>
				<h2>Basic Convolution and Edge Detection</h2>

				<h3>Dealing with edges</h3>
				<p>For all functions needing special cases for the edges, I initally used image wrapping.  I achieved this by using a helper function to calculate a modified index if necessary.</p>
				<p>The helper function <strong>int wrapImg (int max, int idx)</strong> takes the maximum value an index can be and the current index, and returns a modified index if the current index is less than 0 or greater than or equal to the max.  As you can see with the wave image this may not be ideal, since the top of the image is very light and the bottom of the image is very dark. </p>
				<p>To deal with this, I decided to use the reflection method instead.  The helper function <strong>int reflectImg (int max, int idx)</strong>, which reflects out of bounds points back into the image.</p>
				<p>When I implemented edge detection, the helper function <strong>int reflectImg (int max, int idx)</strong>, created some errors on the border which I did not like.  To deal with this, I switched to a new helper function <strong>int validImg (int max, int idx)</strong> which instead only uses valid pixels in the image. </p>
				<div class="row">
					{{#each CSE190_1_img.Edges}}
						{{> assignmentImg }}
					{{/each}}
				</div>

				<div id="Blur">
					{{#with CSE190_1_desc.Blur}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.Blur}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Sharpen">
					{{#with CSE190_1_desc.Sharpen}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.Sharpen}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="EdgeDetect">
					{{#with CSE190_1_desc.EdgeDetect}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.EdgeDetect}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

			<!-- end Convolution and Edge Detection -->

			<div id="scaleShift" class="line"></div>
				<h3>Antialiased Scale and Shift</h3>

				<div id="Scale">
					{{#with CSE190_1_desc.Scale}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.Scale1}}
							{{> assignmentImg }}
						{{/each}}
					</div>
					<p>Hat Filter: f(x) = 1 - |x|</p>
					<div class="row">
						{{#each CSE190_1_img.Scale2}}
							{{> assignmentImg }}
						{{/each}}
					</div>
					<p>Mitchell Filter:</p>
					<p>f(0 <= |x| < 1) = (1/6)*(7|x|^3 - 12|x|^2 + 6/3)</p>
					<p>f(1 <= |x| < 2) = (1/6)*((-7/3)|x|^3 + 12|x|^2 - 20|x| + 32/3)</p>
					<div class="row">
						{{#each CSE190_1_img.Scale3}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>

				<div id="Shift">
					{{#with CSE190_1_desc.Shift}}
						{{> assignmentDesc}}
					{{/with}}
					<div class="row">
						{{#each CSE190_1_img.Shift1}}
							{{> assignmentImg }}
						{{/each}}
					</div>
					<p>Hat Filter: f(x) = 1 - |x|</p>
					<div class="row">
						{{#each CSE190_1_img.Shift2}}
							{{> assignmentImg }}
						{{/each}}
					</div>
					<p>Mitchell Filter:</p>
					<p>f(0 <= |x| < 1) = (1/6)*(7|x|^3 - 12|x|^2 + 6/3)</p>
					<p>f(1 <= |x| < 2) = (1/6)*((-7/3)|x|^3 + 12|x|^2 - 20|x| + 32/3)</p>
					<div class="row">
						{{#each CSE190_1_img.Shift3}}
							{{> assignmentImg }}
						{{/each}}
					</div>
				</div>				
			<!-- end Antialiased Scale and Shift -->

			<div id="funNonLinear" class="line"></div>
				{{#with CSE190_1_desc.funNonLinear}}
					{{> assignmentDesc}}
				{{/with}}
				<div class="row">
					{{#each CSE190_1_img.Fun}}
						{{> assignmentImg }}
					{{/each}}
				</div>
			<!-- end Fun nonlinear filters -->

		</div>

		</div>

	</body>

	<!-- jQuery CDN -->
	<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
	<!-- Latest compiled and minified JavaScript Bootstrap -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

	<script src="/js/portfolio.js"></script>
</html>